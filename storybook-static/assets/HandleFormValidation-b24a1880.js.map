{"version":3,"file":"HandleFormValidation-b24a1880.js","sources":["../../src/services/HandleFormValidation/HandleFormValidation.js"],"sourcesContent":["// signup form regex validation\r\nconst validateUserForm = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.username) {\r\n    errors.username = \"User name is required\";\r\n  } else {\r\n    if (values.username.trim().length === 0) {\r\n      errors.username = \"Username contain be empty.\";\r\n    }\r\n    let userRegEx = /^[a-zA-Z0-9_.-]*$/;\r\n    if (!userRegEx.test(values?.username)) {\r\n      errors.username = \"Invalid Username\";\r\n    }\r\n  }\r\n\r\n  if (!values.email) {\r\n    errors.email = \"Email is required\";\r\n  } else {\r\n    let emailRegEx = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{3,5}$/i;\r\n    if (!emailRegEx.test(values.email)) {\r\n      errors.email = \"Email is not valid\";\r\n    }\r\n  }\r\n\r\n  if (!values.password) {\r\n    errors.password = \"Password is required.\";\r\n  }\r\n  if (values?.password?.trim().length === 0) {\r\n    errors.password = \"Password can't contain empty space\";\r\n  } else {\r\n    let passwordRegEx = /^(?=.{2,}\\d)(?=.{2,}[a-zA-Z])(?=.*[\\W]).{6,10}$/;\r\n    if (!passwordRegEx.test(values?.password)) {\r\n      errors.password =\r\n        \"Password must contain (6-10) characters, one uppercase, one lowercase, one special-character and one number \";\r\n    }\r\n  }\r\n  if (!values.roles) {\r\n    errors.roles = \"Roles Cannot be empty.\";\r\n  } else {\r\n    let rolesRegEx = /^[a-zA-Z0-9]{4,10}$/;\r\n\r\n    if (!rolesRegEx.test(values.roles)) {\r\n      errors.roles = \"Roles must be string \";\r\n    }\r\n  }\r\n  return errors;\r\n};\r\n\r\n// function for faq post\r\nconst validateFAQPost = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.title) {\r\n    errors.title = \"FAQ title is required\";\r\n  } else if (values.title.trim().length === 0) {\r\n    errors.title = \"FAQ title can't contain empty space\";\r\n  } else if (values.title.trim().length < 10) {\r\n    errors.title = \"FAQ title must contain atleast 10 characters.\";\r\n  } else {\r\n    let userRegEx = /^[a-zA-Z\\s.?a-zA-z]+\\.?\\??$/;\r\n    if (!userRegEx.test(values?.title)) {\r\n      errors.title = \"Title can't contain number.\";\r\n    }\r\n  }\r\n\r\n  // if (!isQuillEmpty(values?.body)) {\r\n  //   errors.body = \"FAQ content is required\";\r\n  // }\r\n  // else if (values?.body?.trim().length === 0) {\r\n  //   errors.body = \"FAQ content can't contain empty space\";\r\n  // } else if (values?.body?.trim().length < 20) {\r\n  //   errors.body = \"FAQ content must contain atleast 20 characters.\";\r\n  // }\r\n\r\n  return errors;\r\n};\r\n\r\n// function to check if the react quill value is empty\r\nfunction isQuillEmpty(value) {\r\n  if (\r\n    value.replace(/<(.|\\n)*?>/g, \"\").trim().length === 0 &&\r\n    !value.includes(\"<img\")\r\n  ) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport { validateUserForm, validateFAQPost, isQuillEmpty };\r\n"],"names":["validateUserForm","values","_a","errors","validateFAQPost","isQuillEmpty","value"],"mappings":"AACK,MAACA,EAAoBC,GAAW,CADrC,IAAAC,EAEE,MAAMC,EAAS,CAAA,EAEf,OAAKF,EAAO,UAGNA,EAAO,SAAS,KAAI,EAAG,SAAW,IACpCE,EAAO,SAAW,8BAEJ,oBACD,KAAKF,GAAA,YAAAA,EAAQ,QAAQ,IAClCE,EAAO,SAAW,qBAPpBA,EAAO,SAAW,wBAWfF,EAAO,MAGO,4CACD,KAAKA,EAAO,KAAK,IAC/BE,EAAO,MAAQ,sBAJjBA,EAAO,MAAQ,oBAQZF,EAAO,WACVE,EAAO,SAAW,2BAEhBD,EAAAD,GAAA,YAAAA,EAAQ,WAAR,YAAAC,EAAkB,OAAO,UAAW,EACtCC,EAAO,SAAW,qCAEE,kDACD,KAAKF,GAAA,YAAAA,EAAQ,QAAQ,IACtCE,EAAO,SACL,gHAGDF,EAAO,MAGO,sBAED,KAAKA,EAAO,KAAK,IAC/BE,EAAO,MAAQ,yBALjBA,EAAO,MAAQ,yBAQVA,CACT,EAGMC,EAAmBH,GAAW,CAClC,MAAME,EAAS,CAAA,EAEf,OAAKF,EAAO,MAEDA,EAAO,MAAM,KAAI,EAAG,SAAW,EACxCE,EAAO,MAAQ,sCACNF,EAAO,MAAM,KAAI,EAAG,OAAS,GACtCE,EAAO,MAAQ,gDAEC,8BACD,KAAKF,GAAA,YAAAA,EAAQ,KAAK,IAC/BE,EAAO,MAAQ,+BARjBA,EAAO,MAAQ,wBAqBVA,CACT,EAGA,SAASE,EAAaC,EAAO,CAC3B,OACEA,EAAM,QAAQ,cAAe,EAAE,EAAE,KAAI,EAAG,SAAW,GACnD,CAACA,EAAM,SAAS,MAAM,CAK1B"}