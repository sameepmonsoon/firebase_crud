{"version":3,"file":"HomePage.stories-fe4d325c.js","sources":["../../node_modules/@tanstack/query-core/build/lib/queryObserver.mjs","../../node_modules/@tanstack/react-query/build/lib/useSyncExternalStore.mjs","../../node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs","../../node_modules/@tanstack/react-query/build/lib/isRestoring.mjs","../../node_modules/@tanstack/react-query/build/lib/QueryErrorResetBoundary.mjs","../../node_modules/@tanstack/react-query/build/lib/utils.mjs","../../node_modules/@tanstack/react-query/build/lib/errorBoundaryUtils.mjs","../../node_modules/@tanstack/react-query/build/lib/suspense.mjs","../../node_modules/@tanstack/react-query/build/lib/useBaseQuery.mjs","../../node_modules/@tanstack/react-query/build/lib/useQuery.mjs","../../src/Component/FAQ_loading_skeleton/FaqLoadingSkeleton.jsx","../../src/Pages/HomePage.jsx"],"sourcesContent":["import { shallowEqualObjects, noop, isServer, isValidTimeout, timeUntilStale, replaceData } from './utils.mjs';\nimport { notifyManager } from './notifyManager.mjs';\nimport { focusManager } from './focusManager.mjs';\nimport { Subscribable } from './subscribable.mjs';\nimport { canFetch, isCancelledError } from './retryer.mjs';\n\nclass QueryObserver extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.client = client;\n    this.options = options;\n    this.trackedProps = new Set();\n    this.selectError = null;\n    this.bindMethods();\n    this.setOptions(options);\n  }\n\n  bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  }\n\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnReconnect);\n  }\n\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnWindowFocus);\n  }\n\n  destroy() {\n    this.listeners = new Set();\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n    this.currentQuery.removeObserver(this);\n  }\n\n  setOptions(options, notifyOptions) {\n    const prevOptions = this.options;\n    const prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryOptions(options);\n\n    if (process.env.NODE_ENV !== 'production' && typeof (options == null ? void 0 : options.isDataEqual) !== 'undefined') {\n      this.client.getLogger().error(\"The isDataEqual option has been deprecated and will be removed in the next major version. You can achieve the same functionality by passing a function as the structuralSharing option\");\n    }\n\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getQueryCache().notify({\n        type: 'observerOptionsUpdated',\n        query: this.currentQuery,\n        observer: this\n      });\n    }\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    const mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    }\n\n    const nextRefetchInterval = this.computeRefetchInterval(); // Update refetch interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.currentRefetchInterval)) {\n      this.updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n\n  getOptimisticResult(options) {\n    const query = this.client.getQueryCache().build(this.client, options);\n    return this.createResult(query, options);\n  }\n\n  getCurrentResult() {\n    return this.currentResult;\n  }\n\n  trackResult(result) {\n    const trackedResult = {};\n    Object.keys(result).forEach(key => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackedProps.add(key);\n          return result[key];\n        }\n      });\n    });\n    return trackedResult;\n  }\n\n  getCurrentQuery() {\n    return this.currentQuery;\n  }\n\n  remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  }\n\n  refetch({\n    refetchPage,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        refetchPage\n      }\n    });\n  }\n\n  fetchOptimistic(options) {\n    const defaultedOptions = this.client.defaultQueryOptions(options);\n    const query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    query.isFetchingOptimistic = true;\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n\n  fetch(fetchOptions) {\n    var _fetchOptions$cancelR;\n\n    return this.executeFetch({ ...fetchOptions,\n      cancelRefetch: (_fetchOptions$cancelR = fetchOptions.cancelRefetch) != null ? _fetchOptions$cancelR : true\n    }).then(() => {\n      this.updateResult();\n      return this.currentResult;\n    });\n  }\n\n  executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    let promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions != null && fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  }\n\n  updateStaleTimeout() {\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    const time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    const timeout = time + 1;\n    this.staleTimeoutId = setTimeout(() => {\n      if (!this.currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n\n  computeRefetchInterval() {\n    var _this$options$refetch;\n\n    return typeof this.options.refetchInterval === 'function' ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : (_this$options$refetch = this.options.refetchInterval) != null ? _this$options$refetch : false;\n  }\n\n  updateRefetchInterval(nextInterval) {\n    this.clearRefetchInterval();\n    this.currentRefetchInterval = nextInterval;\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.currentRefetchInterval) || this.currentRefetchInterval === 0) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.executeFetch();\n      }\n    }, this.currentRefetchInterval);\n  }\n\n  updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval(this.computeRefetchInterval());\n  }\n\n  clearStaleTimeout() {\n    if (this.staleTimeoutId) {\n      clearTimeout(this.staleTimeoutId);\n      this.staleTimeoutId = undefined;\n    }\n  }\n\n  clearRefetchInterval() {\n    if (this.refetchIntervalId) {\n      clearInterval(this.refetchIntervalId);\n      this.refetchIntervalId = undefined;\n    }\n  }\n\n  createResult(query, options) {\n    const prevQuery = this.currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.currentResult;\n    const prevResultState = this.currentResultState;\n    const prevResultOptions = this.currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    const prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    const {\n      state\n    } = query;\n    let {\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      fetchStatus,\n      status\n    } = state;\n    let isPreviousData = false;\n    let isPlaceholderData = false;\n    let data; // Optimistically set result in fetching state if needed\n\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        fetchStatus = canFetch(query.options.networkMode) ? 'fetching' : 'paused';\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n\n      if (options._optimisticResults === 'isRestoring') {\n        fetchStatus = 'idle';\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdatedAt && prevQueryResult != null && prevQueryResult.isSuccess && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n      // Memoize select result\n      if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === this.selectFn) {\n        data = this.selectResult;\n      } else {\n        try {\n          this.selectFn = options.select;\n          data = options.select(state.data);\n          data = replaceData(prevResult == null ? void 0 : prevResult.data, data, options);\n          this.selectResult = data;\n          this.selectError = null;\n        } catch (selectError) {\n          if (process.env.NODE_ENV !== 'production') {\n            this.client.getLogger().error(selectError);\n          }\n\n          this.selectError = selectError;\n        }\n      }\n    } // Use query data\n    else {\n      data = state.data;\n    } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      let placeholderData; // Memoize placeholder data\n\n      if (prevResult != null && prevResult.isPlaceholderData && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n            this.selectError = null;\n          } catch (selectError) {\n            if (process.env.NODE_ENV !== 'production') {\n              this.client.getLogger().error(selectError);\n            }\n\n            this.selectError = selectError;\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = replaceData(prevResult == null ? void 0 : prevResult.data, placeholderData, options);\n        isPlaceholderData = true;\n      }\n    }\n\n    if (this.selectError) {\n      error = this.selectError;\n      data = this.selectResult;\n      errorUpdatedAt = Date.now();\n      status = 'error';\n    }\n\n    const isFetching = fetchStatus === 'fetching';\n    const isLoading = status === 'loading';\n    const isError = status === 'error';\n    const result = {\n      status,\n      fetchStatus,\n      isLoading,\n      isSuccess: status === 'success',\n      isError,\n      isInitialLoading: isLoading && isFetching,\n      data,\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      failureReason: state.fetchFailureReason,\n      errorUpdateCount: state.errorUpdateCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isLoading,\n      isLoadingError: isError && state.dataUpdatedAt === 0,\n      isPaused: fetchStatus === 'paused',\n      isPlaceholderData,\n      isPreviousData,\n      isRefetchError: isError && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  }\n\n  updateResult(notifyOptions) {\n    const prevResult = this.currentResult;\n    const nextResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify and update result if something has changed\n\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n\n    this.currentResult = nextResult; // Determine which callbacks to trigger\n\n    const defaultNotifyOptions = {\n      cache: true\n    };\n\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n\n      const {\n        notifyOnChangeProps\n      } = this.options;\n\n      if (notifyOnChangeProps === 'all' || !notifyOnChangeProps && !this.trackedProps.size) {\n        return true;\n      }\n\n      const includedProps = new Set(notifyOnChangeProps != null ? notifyOnChangeProps : this.trackedProps);\n\n      if (this.options.useErrorBoundary) {\n        includedProps.add('error');\n      }\n\n      return Object.keys(this.currentResult).some(key => {\n        const typedKey = key;\n        const changed = this.currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify({ ...defaultNotifyOptions,\n      ...notifyOptions\n    });\n  }\n\n  updateQuery() {\n    const query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    const prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n\n  onQueryUpdate(action) {\n    const notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = !action.manual;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  }\n\n  notify(notifyOptions) {\n    notifyManager.batch(() => {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        var _this$options$onSucce, _this$options, _this$options$onSettl, _this$options2;\n\n        (_this$options$onSucce = (_this$options = this.options).onSuccess) == null ? void 0 : _this$options$onSucce.call(_this$options, this.currentResult.data);\n        (_this$options$onSettl = (_this$options2 = this.options).onSettled) == null ? void 0 : _this$options$onSettl.call(_this$options2, this.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        var _this$options$onError, _this$options3, _this$options$onSettl2, _this$options4;\n\n        (_this$options$onError = (_this$options3 = this.options).onError) == null ? void 0 : _this$options$onError.call(_this$options3, this.currentResult.error);\n        (_this$options$onSettl2 = (_this$options4 = this.options).onSettled) == null ? void 0 : _this$options$onSettl2.call(_this$options4, undefined, this.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        this.listeners.forEach(({\n          listener\n        }) => {\n          listener(this.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        this.client.getQueryCache().notify({\n          query: this.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  }\n\n}\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.dataUpdatedAt > 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\n\nfunction shouldFetchOn(query, options, field) {\n  if (options.enabled !== false) {\n    const value = typeof field === 'function' ? field(query) : field;\n    return value === 'always' || value !== false && isStale(query, options);\n  }\n\n  return false;\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (!options.suspense || query.state.status !== 'error') && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}\n\nexport { QueryObserver };\n//# sourceMappingURL=queryObserver.mjs.map\n","'use client';\nimport { useSyncExternalStore as useSyncExternalStore$1 } from 'use-sync-external-store/shim/index.js';\n\nconst useSyncExternalStore = useSyncExternalStore$1;\n\nexport { useSyncExternalStore };\n//# sourceMappingURL=useSyncExternalStore.mjs.map\n","'use client';\nimport * as React from 'react';\n\nconst defaultContext = /*#__PURE__*/React.createContext(undefined);\nconst QueryClientSharingContext = /*#__PURE__*/React.createContext(false); // If we are given a context, we will use it.\n// Otherwise, if contextSharing is on, we share the first and at least one\n// instance of the context across the window\n// to ensure that if React Query is used across\n// different bundles or microfrontends they will\n// all use the same **instance** of context, regardless\n// of module scoping.\n\nfunction getQueryClientContext(context, contextSharing) {\n  if (context) {\n    return context;\n  }\n\n  if (contextSharing && typeof window !== 'undefined') {\n    if (!window.ReactQueryClientContext) {\n      window.ReactQueryClientContext = defaultContext;\n    }\n\n    return window.ReactQueryClientContext;\n  }\n\n  return defaultContext;\n}\n\nconst useQueryClient = ({\n  context\n} = {}) => {\n  const queryClient = React.useContext(getQueryClientContext(context, React.useContext(QueryClientSharingContext)));\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one');\n  }\n\n  return queryClient;\n};\nconst QueryClientProvider = ({\n  client,\n  children,\n  context,\n  contextSharing = false\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n\n  if (process.env.NODE_ENV !== 'production' && contextSharing) {\n    client.getLogger().error(\"The contextSharing option has been deprecated and will be removed in the next major version\");\n  }\n\n  const Context = getQueryClientContext(context, contextSharing);\n  return /*#__PURE__*/React.createElement(QueryClientSharingContext.Provider, {\n    value: !context && contextSharing\n  }, /*#__PURE__*/React.createElement(Context.Provider, {\n    value: client\n  }, children));\n};\n\nexport { QueryClientProvider, defaultContext, useQueryClient };\n//# sourceMappingURL=QueryClientProvider.mjs.map\n","'use client';\nimport * as React from 'react';\n\nconst IsRestoringContext = /*#__PURE__*/React.createContext(false);\nconst useIsRestoring = () => React.useContext(IsRestoringContext);\nconst IsRestoringProvider = IsRestoringContext.Provider;\n\nexport { IsRestoringProvider, useIsRestoring };\n//# sourceMappingURL=isRestoring.mjs.map\n","'use client';\nimport * as React from 'react';\n\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\n\nconst QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nconst useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext); // COMPONENT\n\nconst QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};\n\nexport { QueryErrorResetBoundary, useQueryErrorResetBoundary };\n//# sourceMappingURL=QueryErrorResetBoundary.mjs.map\n","function shouldThrowError(_useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params);\n  }\n\n  return !!_useErrorBoundary;\n}\n\nexport { shouldThrowError };\n//# sourceMappingURL=utils.mjs.map\n","'use client';\nimport * as React from 'react';\nimport { shouldThrowError } from './utils.mjs';\n\nconst ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nconst useClearResetErrorBoundary = errorResetBoundary => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nconst getHasError = ({\n  result,\n  errorResetBoundary,\n  useErrorBoundary,\n  query\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(useErrorBoundary, [result.error, query]);\n};\n\nexport { ensurePreventErrorBoundaryRetry, getHasError, useClearResetErrorBoundary };\n//# sourceMappingURL=errorBoundaryUtils.mjs.map\n","const ensureStaleTime = defaultedOptions => {\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n};\nconst willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nconst shouldSuspend = (defaultedOptions, result, isRestoring) => (defaultedOptions == null ? void 0 : defaultedOptions.suspense) && willFetch(result, isRestoring);\nconst fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).then(({\n  data\n}) => {\n  defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n  defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n}).catch(error => {\n  errorResetBoundary.clearReset();\n  defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n  defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n});\n\nexport { ensureStaleTime, fetchOptimistic, shouldSuspend, willFetch };\n//# sourceMappingURL=suspense.mjs.map\n","'use client';\nimport * as React from 'react';\nimport { useSyncExternalStore } from './useSyncExternalStore.mjs';\nimport { notifyManager } from '@tanstack/query-core';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary.mjs';\nimport { useQueryClient } from './QueryClientProvider.mjs';\nimport { useIsRestoring } from './isRestoring.mjs';\nimport { ensurePreventErrorBoundaryRetry, useClearResetErrorBoundary, getHasError } from './errorBoundaryUtils.mjs';\nimport { ensureStaleTime, shouldSuspend, fetchOptimistic } from './suspense.mjs';\n\nfunction useBaseQuery(options, Observer) {\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = queryClient.defaultQueryOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions._optimisticResults = isRestoring ? 'isRestoring' : 'optimistic'; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  ensureStaleTime(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const [observer] = React.useState(() => new Observer(queryClient, defaultedOptions));\n  const result = observer.getOptimisticResult(defaultedOptions);\n  useSyncExternalStore(React.useCallback(onStoreChange => {\n    const unsubscribe = isRestoring ? () => undefined : observer.subscribe(notifyManager.batchCalls(onStoreChange)); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return unsubscribe;\n  }, [observer, isRestoring]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (shouldSuspend(defaultedOptions, result, isRestoring)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  } // Handle error boundary\n\n\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    useErrorBoundary: defaultedOptions.useErrorBoundary,\n    query: observer.getCurrentQuery()\n  })) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\n\nexport { useBaseQuery };\n//# sourceMappingURL=useBaseQuery.mjs.map\n","'use client';\nimport { parseQueryArgs, QueryObserver } from '@tanstack/query-core';\nimport { useBaseQuery } from './useBaseQuery.mjs';\n\nfunction useQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}\n\nexport { useQuery };\n//# sourceMappingURL=useQuery.mjs.map\n","export const FaqLoadingSkeleton = () => {\r\n  return (\r\n    <div\r\n      className={`w-full flex justify-around h-20  md:h-[2.8rem] items-center md:flex-row flex-col p-[1px] bg-blue-0 rounded-md border-[1px] border-blue-300`}>\r\n      <div className=\" bg-blue-100 w-full h-full rounded-md animate-pulse duration-1000 ease-linear relative flex justify-end items-center gap-2\">\r\n        &nbsp;\r\n        <div className=\"animate-pulse duration-1000 ease-linea w-[1.8rem] h-[65%] bg-blue-200 absolute right-[0.4rem] rounded-md border-[1px] border-blue-300/50\">\r\n          &nbsp;\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { AiOutlineMinus } from \"react-icons/ai\";\r\nimport { MdAdd, MdDeleteOutline } from \"react-icons/md\";\r\nimport HomeLayout from \"../Layout/HomeLayout\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\nimport { IoAdd, IoLogOutOutline } from \"react-icons/io5\";\r\nimport { useEffect, useState } from \"react\";\r\nimport FAQModal from \"../Component/FAQModal/FAQModal\";\r\nimport { AuthContext } from \"../Context/UserAuthContext\";\r\nimport { useContext } from \"react\";\r\nimport { collection, deleteDoc, doc, getDocs } from \"firebase/firestore\";\r\nimport { firestoreAuth, firestoreDb } from \"../Utils/Firebase\";\r\nimport \"./HomePage.css\";\r\nimport {\r\n  toastMessageError,\r\n  toastMessageSuccess,\r\n} from \"../services/ToastMessage/ToastMessage\";\r\nimport DeleteModal from \"../Component/Delete Modal/DeleteModal\";\r\nimport ReactQuill from \"react-quill\";\r\nimport { QueryClient, useQuery } from \"@tanstack/react-query\";\r\nimport { FaqLoadingSkeleton } from \"../Component/FAQ_loading_skeleton/FaqLoadingSkeleton\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CiUser } from \"react-icons/ci\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { signOut } from \"firebase/auth\";\r\nimport { logoutUser } from \"../Store/authSlice\";\r\nimport { GET_USER } from \"../Store/user\";\r\nimport GlobalButton from \"../Component/GlobalButton/GlobalButton\";\r\nconst HomePage = () => {\r\n  const queryClient = new QueryClient({\r\n    defaultOptions: {\r\n      queries: {\r\n        refetchOnWindowFocus: false,\r\n      },\r\n    },\r\n  });\r\n  const { currentuser } = useSelector((state) => state.auth);\r\n  const { isAdminRole } = useContext(AuthContext);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [openDeleteModal, setOpenDeleteModal] = useState(false);\r\n  const [selctedIndex, setSelectedIndex] = useState(null);\r\n  const [editData, setEditData] = useState(null);\r\n  const [deleteFaqId, setDeleteFaqId] = useState(null);\r\n  const [previewImageUrl, setPreviewImageUrl] = useState([]);\r\n  const handleModalToggle = () => {\r\n    setOpenModal(!openModal);\r\n  };\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { data, isFetching } = useQuery({\r\n    queryKey: [\"faq\"],\r\n    queryFn: async () => {\r\n      const allFAQData = await getDocs(collection(firestoreDb, \"post\"));\r\n      const data = allFAQData?.docs?.map((doc) => doc);\r\n      return data;\r\n    },\r\n  });\r\n\r\n  const handleAccordionToggle = (index) => {\r\n    if (selctedIndex === index) {\r\n      setSelectedIndex(null);\r\n    } else {\r\n      setSelectedIndex(index);\r\n    }\r\n  };\r\n\r\n  //function to set the delete id\r\n  const handleDelete = async (id) => {\r\n    setIsButtonDisabled(true);\r\n    setOpenDeleteModal(!openDeleteModal);\r\n    setDeleteFaqId(id);\r\n  };\r\n\r\n  //function that deletes the faq\r\n  const deleteFAQ = async () => {\r\n    setIsButtonDisabled(true);\r\n    if (deleteFaqId) {\r\n      const deleteDocument = doc(firestoreDb, \"post\", deleteFaqId);\r\n      await deleteDoc(deleteDocument)\r\n        .then(() => {\r\n          toastMessageSuccess(\"FAQ Deleted.\");\r\n          queryClient.invalidateQueries({ queryKey: [\"faq\"] });\r\n        })\r\n        .catch(() => {\r\n          toastMessageError(\"Error deleting FAQ.\");\r\n        })\r\n        .finally(() => {\r\n          setIsButtonDisabled(false);\r\n          toggleDeleteModal();\r\n        });\r\n    }\r\n  };\r\n  const toggleDeleteModal = () => {\r\n    setOpenDeleteModal(!openDeleteModal);\r\n    if (openDeleteModal) {\r\n      setIsButtonDisabled(false);\r\n    }\r\n    if (!openDeleteModal) {\r\n      setIsButtonDisabled(true);\r\n    }\r\n  };\r\n  const handleEdit = async (id, index, data) => {\r\n    setEditData({\r\n      ...editData,\r\n      [\"postId\"]: id,\r\n      [\"title\"]: data?.title,\r\n      [\"body\"]: data?.body,\r\n      [\"image\"]: data?.image,\r\n    });\r\n    handleModalToggle();\r\n  };\r\n\r\n  const handeAddNewFAQ = () => {\r\n    setEditData(null);\r\n    handleModalToggle();\r\n  };\r\n\r\n  //handles image preview when clicked react-quill body/faq\r\n  const handleFAQContentClick = (event) => {\r\n    const clickedElement = event.target;\r\n    if (clickedElement.tagName === \"IMG\") {\r\n      setPreviewImageUrl([clickedElement.src]);\r\n      document?.getElementById(\"imagePreview\")?.requestFullscreen();\r\n    }\r\n  };\r\n\r\n  //remove image preview\r\n  const removePreviewImage = () => {\r\n    const element = document.getElementById(\"imagePreview\");\r\n    element?.remove();\r\n    setPreviewImageUrl(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: GET_USER });\r\n  }, [dispatch]);\r\n\r\n  const user = useSelector((state) => state.user.user);\r\n  console.log(user);\r\n  return (\r\n    <HomeLayout>\r\n      {currentuser?.displayName && (\r\n        <div className=\"hidden absolute top-5 left-5 rounded-full min-w-30 max-w-40 md:flex cursor-pointer justify-between px-2 items-center flex-row h-10 border-[1px] border-blue-200 hover:bg-blue-100\">\r\n          <span className=\" w-[2rem] h-full flex justify-center items-center rounded-l-full\">\r\n            <CiUser size={23} />\r\n          </span>\r\n          <span className=\"flex-1\">{currentuser?.displayName}</span>\r\n        </div>\r\n      )}\r\n      {previewImageUrl.length > 0 && (\r\n        <div\r\n          className=\"fixed w-full  h-full z-[200] bg-white/50 backdrop-blur-sm flex justify-center items-center\"\r\n          onClick={removePreviewImage}>\r\n          {previewImageUrl.map((item, index) => (\r\n            <img\r\n              key={index}\r\n              src={item}\r\n              id=\"imagePreview\"\r\n              className=\"w-[50%] h-[60%] z-[200] object-contain\"\r\n            />\r\n          ))}\r\n          <span\r\n            onClick={removePreviewImage}\r\n            className=\"h-10 w-[12rem] cursor-pointer bg-black rounded-full text-white flex justify-center items-center absolute top-10\">\r\n            Click Anywhere To Exit\r\n          </span>\r\n        </div>\r\n      )}\r\n      <div\r\n        id=\"home\"\r\n        className=\"w-[90%] md:w-[60%] lg:w-[70%]  min-h-[17rem] max-h-[45rem] bg-white text-black border-[1px] shadow-lg flex justify-start items-start absolute top-3 flex-col gap-[0.8rem] p-2 m-1 rounded-[3px] overflow-y-auto overflow-x-hidden\">\r\n        <div className=\"md:min-h-[3rem] bg-blue-600  p-2 md:p-1 min-h-[5.5rem] relative w-full flex flex-col  md:flex-row justify-start md:justify-between gap-2 md:gap-10  items-start md:items-center text-md sm:text-xl font-[500] text-white\">\r\n          Frequently Asked Questions\r\n          {isAdminRole && (\r\n            <GlobalButton\r\n              handleClick={handeAddNewFAQ}\r\n              buttonTitle={\"Add FAQ\"}\r\n              buttonIcon={\r\n                <IoAdd size={25} className=\"group-hover:text-blue-800\" />\r\n              }\r\n              color=\"\"\r\n              size=\"medium\"\r\n            />\r\n          )}\r\n        </div>\r\n        <FAQModal\r\n          toggleModal={handleModalToggle}\r\n          modalState={openModal}\r\n          editDocData={editData}\r\n        />\r\n        <DeleteModal\r\n          deleteModalState={openDeleteModal}\r\n          closeDeleteModalFunction={toggleDeleteModal}\r\n          deleteFAQ={deleteFAQ}\r\n          isLoading={!isButtonDisabled}\r\n        />\r\n        {/* accordion */}\r\n        {isFetching ? (\r\n          <div className=\"w-full h-full flex flex-col justify-start text-[44px] font-[500] items-start gap-4\">\r\n            <FaqLoadingSkeleton />\r\n            <FaqLoadingSkeleton />\r\n            <FaqLoadingSkeleton />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {data?.map((data, index) => {\r\n              const postId = data.id;\r\n              const currentPostData = data.data();\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className={`h-auto cursor-pointer bg-white border-[1px] ${\r\n                    selctedIndex === index &&\r\n                    \"border-blue-400 outline outline-2 outline-offset-1 outline-blue-200 shadow-sm shadow-black/30\"\r\n                  } border-blue-200 w-full flex flex-col justify-around items-center rounded-md `}>\r\n                  <div\r\n                    className={`w-full relative hover:bg-blue-100 flex justify-around h-40  md:h-[2.8rem] items-center md:flex-row flex-col p-1  ${\r\n                      selctedIndex === index && \"bg-blue-100 rounded-t-md\"\r\n                    }`}>\r\n                    <div\r\n                      className=\"absolute top-0 left-0 w-full h-full z-0\"\r\n                      onClick={() => handleAccordionToggle(index)}>\r\n                      &nbsp;\r\n                    </div>\r\n                    <div\r\n                      className={`order-1 w-full md:w-auto md:flex-1 flex-wrap  flex justify-start px-2 items-center h-full text-[16px]  sm:text-[16px] overflow-hidden `}>\r\n                      {currentPostData?.title}\r\n                    </div>\r\n\r\n                    <div className=\"z-10 order-2 w-auto h-40 md:h-[2.5rem] flex justify-start items-center gap-2 flex-wrap\">\r\n                      {isAdminRole && (\r\n                        <span\r\n                          onClick={() => {\r\n                            handleEdit(postId, index, currentPostData);\r\n                          }}\r\n                          className=\"  text-emerald-600 sm:w-[2rem] sm:h-[80%] flex justify-center items-center cursor-pointer group border-[0px] rounded-md border-emerald-400\">\r\n                          <FiEdit\r\n                            size={25}\r\n                            className=\"group-hover:text-green-800 z-2\"\r\n                          />\r\n                        </span>\r\n                      )}\r\n                      {isAdminRole && (\r\n                        <button\r\n                          disabled={isButtonDisabled}\r\n                          onClick={() => handleDelete(postId)}\r\n                          className={`z-10 text-red-600 sm:w-[2rem] sm:h-[80%] flex justify-center items-center ${\r\n                            isButtonDisabled\r\n                              ? \"cursor-not-allowed\"\r\n                              : \"cursor-pointer\"\r\n                          } group border-[0px] rounded-md border-red-700`}>\r\n                          <MdDeleteOutline\r\n                            size={25}\r\n                            className=\"group-hover:text-red-800 text-red-600 z-2\"\r\n                          />\r\n                        </button>\r\n                      )}\r\n                      <span\r\n                        className=\" z-2 text-blue-900 sm:w-[2rem] w-[1.8rem] h-[38%] sm:h-[80%] flex justify-center items-center cursor-pointer group border-[0px] rounded-md border-blue-800\"\r\n                        onClick={() => handleAccordionToggle(index)}>\r\n                        {selctedIndex === index ? (\r\n                          <AiOutlineMinus\r\n                            size={25}\r\n                            className=\"group-hover:text-blue-800\"\r\n                          />\r\n                        ) : (\r\n                          <MdAdd\r\n                            size={25}\r\n                            className=\"group-hover:text-blue-800\"\r\n                          />\r\n                        )}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  {selctedIndex === index && (\r\n                    <div\r\n                      className={`w-full min-h-[4rem]  text-gray-600 p-1 py-2 flex justify-start items-center flex-wrap text-[14px] sm:text-[17px] flex-col border-t-[1px] border-blue-200`}>\r\n                      <div\r\n                        className=\"w-full z-1\"\r\n                        onClick={(e) => {\r\n                          handleFAQContentClick(e);\r\n                        }}>\r\n                        <ReactQuill\r\n                          id=\"read-quill\"\r\n                          value={currentPostData?.body}\r\n                          readOnly={true}\r\n                          theme={\"snow\"}\r\n                          modules={{\r\n                            toolbar: null,\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <button\r\n        onClick={() => {\r\n          signOut(firestoreAuth).then(() => {\r\n            dispatch(logoutUser());\r\n            navigate(\"/signin\");\r\n          });\r\n        }}\r\n        className=\" absolute bottom-3 w-[8rem] rounded-sm right-5 bg-red-700 text-white h-[2.4rem] flex justify-center items-center\">\r\n        <span className=\"flex-1 text-lg\">Logout</span>\r\n        <span className=\"w-10  h-full justify-center items-center flex rounded-r-sm\">\r\n          <IoLogOutOutline size={25} />\r\n        </span>\r\n      </button>\r\n    </HomeLayout>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["QueryObserver","Subscribable","client","options","shouldFetchOnMount","shouldFetchOn","notifyOptions","prevOptions","prevQuery","shallowEqualObjects","mounted","shouldFetchOptionally","nextRefetchInterval","query","result","trackedResult","key","refetchPage","defaultedOptions","fetchOptions","_fetchOptions$cancelR","promise","noop","isServer","isValidTimeout","timeout","timeUntilStale","_this$options$refetch","nextInterval","focusManager","prevResult","prevResultState","prevResultOptions","queryChange","queryInitialState","prevQueryResult","state","dataUpdatedAt","error","errorUpdatedAt","fetchStatus","status","isPreviousData","isPlaceholderData","data","fetchOnMount","fetchOptionally","canFetch","replaceData","selectError","placeholderData","isFetching","isLoading","isError","isStale","nextResult","defaultNotifyOptions","shouldNotifyListeners","notifyOnChangeProps","includedProps","typedKey","action","isCancelledError","notifyManager","_this$options$onSucce","_this$options","_this$options$onSettl","_this$options2","_this$options$onError","_this$options3","_this$options$onSettl2","_this$options4","listener","shouldLoadOnMount","field","value","useSyncExternalStore","useSyncExternalStore$1","defaultContext","React.createContext","QueryClientSharingContext","getQueryClientContext","context","contextSharing","useQueryClient","queryClient","React.useContext","QueryClientProvider","children","React.useEffect","Context","React.createElement","IsRestoringContext","useIsRestoring","createValue","isReset","QueryErrorResetBoundaryContext","useQueryErrorResetBoundary","shouldThrowError","_useErrorBoundary","params","ensurePreventErrorBoundaryRetry","errorResetBoundary","useClearResetErrorBoundary","getHasError","useErrorBoundary","ensureStaleTime","willFetch","isRestoring","shouldSuspend","fetchOptimistic","observer","useBaseQuery","Observer","React.useState","React.useCallback","onStoreChange","unsubscribe","useQuery","arg1","arg2","arg3","parsedOptions","parseQueryArgs","FaqLoadingSkeleton","jsx","jsxs","HomePage","QueryClient","currentuser","useSelector","isAdminRole","useContext","AuthContext","openModal","setOpenModal","useState","isButtonDisabled","setIsButtonDisabled","openDeleteModal","setOpenDeleteModal","selctedIndex","setSelectedIndex","editData","setEditData","deleteFaqId","setDeleteFaqId","previewImageUrl","setPreviewImageUrl","handleModalToggle","dispatch","useDispatch","navigate","useNavigate","allFAQData","getDocs","collection","firestoreDb","_a","doc","handleAccordionToggle","index","handleDelete","id","deleteFAQ","deleteDocument","deleteDoc","toastMessageSuccess","toastMessageError","toggleDeleteModal","handleEdit","handeAddNewFAQ","handleFAQContentClick","event","clickedElement","removePreviewImage","element","useEffect","GET_USER","user","HomeLayout","CiUser","item","GlobalButton","IoAdd","FAQModal","DeleteModal","Fragment","postId","currentPostData","FiEdit","MdDeleteOutline","AiOutlineMinus","MdAdd","e","ReactQuill","signOut","firestoreAuth","logoutUser","IoLogOutOutline","HomePage$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}